# Generated by Django 4.2.2 on 2024-04-14 04:26

from pickle import FALSE, TRUE
from django.contrib.auth.models import User
from django.contrib.auth.models import Group

from django.db import migrations
# Подключаем модуль для работы с датой/веременем
from datetime import datetime, timedelta
# Подключаем модкль генерации случайных чисел
import random

# Получение случайного ID телеграмм 9 цифр (например 611996998)
def get_telegram_id():
    telegram_id = ""
    for n in range(9):
        telegram_id = telegram_id + str(random.randint(0, 9)) 
    return telegram_id

# Получение случайного телефона
def get_telefon():
    if random.randint(0, 1) == 1:
        telefon = "+7-701-"
    else:
        telefon = "+7-705-" 
    telefon = telefon + str(random.randint(0, 9)) + str(random.randint(0, 9)) + str(random.randint(0, 9)) + "-" + str(random.randint(0, 9)) + str(random.randint(0, 9)) + str(random.randint(0, 9)) + str(random.randint(0, 9)) 
    return telefon

# Найти или Добавить Категорию
global dict_category
dict_category = {}

def get_category(apps, val):   
    # Поиск категории
    if val in dict_category.values():
        for k, v in dict_category.items():
            if v == val:
                return k    
    else:
        Category = apps.get_model("product", "Category")
        category = Category()
        category.category_title = val
        category.save()
        dict_category[category.id] = category.category_title
        return category.id

# Добавить товар 
def insert_catalog(apps, param_catalog):   
    Catalog = apps.get_model("product", "Catalog")
    catalog = Catalog()
    catalog.category_id = param_catalog[0]
    catalog.catalog_title = param_catalog[1]
    catalog.details = param_catalog[2]
    catalog.price = param_catalog[3]
    catalog.photo = param_catalog[4]
    catalog.save()
    return

# Добавить Пользователи Telegram 
def insert_customer(apps, param):   
    Customer = apps.get_model("product", "Customer")
    customer = Customer()
    customer.telegram_id = param[0]
    customer.phone_number = param[1]
    customer.first_name = param[2]
    customer.last_name = param[3]
    customer.date_joined = param[4]
    customer.save()
    return

# Добавить Заявку 
def insert_application(apps, param):   
    Application = apps.get_model("product", "Application")
    application = Application()
    application.date_application = param[0]
    application.telegram_id = param[1]
    application.catalog_id = param[2]
    application.save()
    application.date_application = param[0]
    application.save()
    # Добавить движенеи заявки
    parameters = [application.id, application.date_application, "Заявка принята", "Заявка принята в обработку"]
    insert_movement(apps, parameters)
    parameters = [application.id, application.date_application + timedelta(minutes=10), "Заявка в работе", "Заявка в работе"]
    insert_movement(apps, parameters)
    parameters = [application.id, application.date_application + timedelta(minutes=30), "Заявка исполнена", "Заявка исполнена"]
    insert_movement(apps, parameters)
    return

# Добавить движение заявки клиента 
def insert_movement(apps, param_movement):   
    Movement = apps.get_model("product", "Movement")
    movement = Movement()
    movement.application_id = param_movement[0]
    movement.datem = param_movement[1]
    movement.status = param_movement[2]
    movement.details = param_movement[3]
    movement.save()
    movement.datem = param_movement[1]
    movement.save()
    return


# Начальные данные 
def new_data(apps, schema_editor):
    try:
        # Суперпользователь id=1
        user = User.objects.create_superuser(username='root',
        email='shop140424@mail.ru',
        first_name='Марат', 
        last_name='Баядилов',
        password='SsNn5678+-@')
        print("Суперпользователь создан")
    
        # Группа менеджеров
        managers = Group.objects.get_or_create(name = 'Managers')
        managers = Group.objects.get(name='Managers')
        print("Группа менеджеров создана")
    
        # Пользователь с ролью менеджера id=2
        user = User.objects.create_user(username='manager', password='Ss0066+-', email='manager@mail.ru', first_name='Алмат', last_name='Кужахметов')
        managers.user_set.add(user)
        print("Менеджер добавлен в группу менеджеров")

        #1 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Пицца"), "Береке Ет", """Пряная говядина, томаты, красный лук, моцарелла, фирменный соус альфредо, чеснок, итальянские травы""", 2990, "images/catalog01.jpg"]		
        insert_catalog(apps, parameters)   
        
        #2 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Пицца"), "Вау! Кебаб", """Мясо говядины, соус ранч, сыр моцарелла, сладкий перец, томаты, красный лук и фирменный томатный соус""", 2700, "images/catalog02.jpg"]		
        insert_catalog(apps, parameters)   
        
        #3 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Пицца"), "Кебабная с аджикой", """Мясо для кебаба, острые колбаски чоризо из цыпленка, пикантная пепперони из цыпленка, цыпленок, моцарелла, фирменный томатный соус, острый соус аджика""", 2700, "images/catalog03.jpg"]		
        insert_catalog(apps, parameters)   
        
        #4 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Пицца"), "Креветки со сладким чили", """Креветки, ананасы, соус сладкий чили, сладкий перец, моцарелла, фирменный соус альфредо""", 2700, "images/catalog04.jpg"]		
        insert_catalog(apps, parameters)   
        
        #5 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Пицца"), "Сырная", """Моцарелла, сыры чеддер и пармезан, соус альфредо""", 1650, "images/catalog05.jpg"]		
        insert_catalog(apps, parameters)   
        
        #6 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Пицца"), "Чоризо фреш", """Пикантные колбаски чоризо из цыпленка, зеленый перец, моцарелла, томатный соус""", 1650, "images/catalog06.jpg"]		
        insert_catalog(apps, parameters)   
        
        #7 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Пицца"), "Ветчина и сыр", """Ветчина, моцарелла и соус альфредо — просто и со вкусом""", 1990, "images/catalog07.jpg"]		
        insert_catalog(apps, parameters)   
        
        #8 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Пицца"), "Двойной цыпленок", """Цыпленок, моцарелла, соус альфредо""", 2100, "images/catalog08.jpg"]		
        insert_catalog(apps, parameters)   
        
        #9 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Пицца"), "Жюльен", """Цыпленок, шампиньоны, ароматный грибной соус, лук, сухой чеснок, моцарелла, смесь сыров чеддер и пармезан, фирменный соус альфредо""", 2700, "images/catalog09.jpg"]		
        insert_catalog(apps, parameters)   
        
        #10 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Пицца"), "Песто", """Сочный цыпленок с пикантным соусом песто, кубики брынзы, томаты, моцарелла и соус альфредо""", 2700, "images/catalog10.jpg"]		
        insert_catalog(apps, parameters)   
        
        #11 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Пицца"), "Карбонара", """Ветчина из цыпленка, сыры чеддер и пармезан, томаты, красный лучок, моцарелла, соус альфредо, чеснок и итальянские травы""", 2350, "images/catalog11.jpg"]		
        insert_catalog(apps, parameters)   
        
        #12 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Пицца"), "Мясная", """Сочный цыпленок, ветчина, пикантная пепперони, острые колбаски чоризо, моцарелла и томатный соус""", 2700, "images/catalog12.jpg"]		
        insert_catalog(apps, parameters)   
        
        #13 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Пицца"), "Аррива!", """Цыпленок, острая чоризо, соус бургер, сладкий перец, красный лук, томаты, моцарелла, соус ранч, чеснок""", 2350, "images/catalog13.jpg"]		
        insert_catalog(apps, parameters)   
        
        #14 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Пицца"), "Бургер-пицца", """Сыр моцарелла, ветчина, лук красный, томаты, маринованные огурчики, соус Бургер, чеснок, томатный соус""", 2400, "images/catalog14.jpg"]		
        insert_catalog(apps, parameters)   
        
        #15 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Пицца"), "Сырный цыпленок", """Цыпленок, моцарелла, сыры чеддер и пармезан, сырный соус, томаты, соус альфредо, чеснок""", 2700, "images/catalog15.jpg"]		
        insert_catalog(apps, parameters)   
        
        #16 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Кофе"), "Кофе Капучино", """Король среди кофейных напитков — классический капучино. Для любителей сбалансированного кофейно-молочного вкуса""", 900, "images/catalog16.jpg"]		
        insert_catalog(apps, parameters)   
        
        #17 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Кофе"), "Кофе Латте", """Когда хочется нежную молочную пенку, на помощь приходит классический латте""", 900, "images/catalog17.jpg"]		
        insert_catalog(apps, parameters)   
        
        #18 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Кофе"), "Ирландский Капучино", """Классический кофейный напиток с яркой историей и сливочным вкусом""", 1100, "images/catalog18.jpg"]		
        insert_catalog(apps, parameters)   
        
        #19 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Кофе"), "Айс капучино", """Освежающий напиток для любителей кофе. В составе эспрессо, пломбир и бодрость на весь день""", 1400, "images/catalog19.jpg"]		
        insert_catalog(apps, parameters)   
        
        #20 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Напитки"), "Pepsi 0,5 л", """Pepsi 0,5 л""", 550, "images/catalog20.jpg"]		
        insert_catalog(apps, parameters)   
        
        #21 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Напитки"), "7UP 0,5 л", """7UP 0,5 л""", 550, "images/catalog21.jpg"]		
        insert_catalog(apps, parameters)   
        
        #22 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Напитки"), "Mirinda 0,5 л", """Mirinda 0,5 л""", 550, "images/catalog22.jpg"]		
        insert_catalog(apps, parameters)   
        
        #23 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Напитки"), "Чай Lipton черный с персиком 0,5 л", """Чай Lipton черный с персиком 0,5 л""", 800, "images/catalog23.jpg"]		
        insert_catalog(apps, parameters)   
        
        #24 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Напитки"), "Чай Lipton зеленый 0,5 л", """Чай Lipton зеленый 0,5 л""", 800, "images/catalog24.jpg"]		
        insert_catalog(apps, parameters)   
        
        #25 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Напитки"), "Сок Gracio Яблоко 1 л", """Сок Gracio Яблоко 1 л""", 1700, "images/catalog25.jpg"]		
        insert_catalog(apps, parameters)   
        
        #26 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Напитки"), "Сок Gracio Персик 1 л", """Сок Gracio Персик 1 л""", 1700, "images/catalog26.jpg"]		
        insert_catalog(apps, parameters)   
        
        #27 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Напитки"), "Сок Gracio Апельсин 1 л", """Сок Gracio Апельсин 1 л""", 1700, "images/catalog27.jpg"]		
        insert_catalog(apps, parameters)   
       
        print("Каталог ОК")

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=30) + timedelta(minutes=random.randint(1, 360))
        parameters = [tel_id ,  get_telefon(), "Меруерт", "Жансейтова", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 1]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=29) + timedelta(minutes=random.randint(2, 360))
        parameters = [tel_id ,  get_telefon(), "Айнаш", "Тезекбаева", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 3]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=28) + timedelta(minutes=random.randint(2, 360))
        parameters = [tel_id ,  get_telefon(), "Максат", "Абиев", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 3]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=27) + timedelta(minutes=random.randint(2, 360))
        parameters = [tel_id ,  get_telefon(), "Алмагуль", "Сарманова", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 5]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=26) + timedelta(minutes=random.randint(2, 360))
        parameters = [tel_id ,  get_telefon(), "Нұрсұлтан", "Қуанышбай", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 7]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=25) + timedelta(minutes=random.randint(2, 360))
        parameters = [tel_id ,  get_telefon(), "Жанболат", "Мансур", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 9]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=24) + timedelta(minutes=random.randint(1, 360))
        parameters = [tel_id ,  get_telefon(), "Элмира", "Ермахан", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 11]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=23) + timedelta(minutes=random.randint(1, 360))
        parameters = [tel_id ,  get_telefon(), "Индира", "Акимова", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 11]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=22) + timedelta(minutes=random.randint(1, 360))
        parameters = [tel_id ,  get_telefon(), "Арайлым", "Раушан", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 11]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=21) + timedelta(minutes=random.randint(2, 360))
        parameters = [tel_id ,  get_telefon(), "Арай", "Сындар", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 13]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=20) + timedelta(minutes=random.randint(2, 360))
        parameters = [tel_id ,  get_telefon(), "Данагуль", "Муканова", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 13]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=19) + timedelta(minutes=random.randint(2, 360))
        parameters = [tel_id ,  get_telefon(), "Лаура", "Сейтханова", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 15]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=18) + timedelta(minutes=random.randint(2, 360))
        parameters = [tel_id ,  get_telefon(), "Дария", "Дамирова", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 15]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=17) + timedelta(minutes=random.randint(2, 360))
        parameters = [tel_id ,  get_telefon(), "Айдана", "Қаратай", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 17]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=16) + timedelta(minutes=random.randint(2, 360))
        parameters = [tel_id ,  get_telefon(), "Гавхар", "Махбубекова", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 17]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=15) + timedelta(minutes=random.randint(2, 360))
        parameters = [tel_id ,  get_telefon(), "Арман", "Бейбіт", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 19]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=14) + timedelta(minutes=random.randint(2, 360))
        parameters = [tel_id ,  get_telefon(), "Айгерим", "Абдикаримова", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 19]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=13) + timedelta(minutes=random.randint(1, 360))
        parameters = [tel_id ,  get_telefon(), "Ержан", "Сулейменов", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 21]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=12) + timedelta(minutes=random.randint(2, 360))
        parameters = [tel_id ,  get_telefon(), "Динара", "Жолдасбаева", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 23]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=11) + timedelta(minutes=random.randint(2, 360))
        parameters = [tel_id ,  get_telefon(), "Лаура", "Әйтелбай", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 23]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=10) + timedelta(minutes=random.randint(2, 360))
        parameters = [tel_id ,  get_telefon(), "Айзада", "Асхатова", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 25]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=9) + timedelta(minutes=random.randint(2, 360))
        parameters = [tel_id ,  get_telefon(), "Диана", "Абдыгалиева", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 27]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=8) + timedelta(minutes=random.randint(2, 360))
        parameters = [tel_id ,  get_telefon(), "Дамир", "Тагамбаев", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 1]		
        insert_application(apps, parameters)

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=7) + timedelta(minutes=random.randint(2, 360))
        parameters = [tel_id ,  get_telefon(), "Адина", "Сарсенбаева", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 2]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=6) + timedelta(minutes=random.randint(2, 360))
        parameters = [tel_id ,  get_telefon(), "Самат", "Манат", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 15]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=5) + timedelta(minutes=random.randint(2, 360))
        parameters = [tel_id ,  get_telefon(), "Мират", "Төлеуов", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 15]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=4) + timedelta(minutes=random.randint(2, 360))
        parameters = [tel_id ,  get_telefon(), "Диана", "Сырымбет", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 9]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=3) + timedelta(minutes=random.randint(2, 360))
        parameters = [tel_id ,  get_telefon(), "Гулзия", "Досанова", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 9]		
        insert_application(apps, parameters)   

        # Пользователи Telegram заявки (там автоматом движение заявки)
        tel_id = get_telegram_id()
        date1 = datetime.now() - timedelta(days=2) + timedelta(minutes=random.randint(2, 360))
        parameters = [tel_id ,  get_telefon(), "Аскар", "Ахметов", date1 ]		
        insert_customer(apps, parameters)   
        parameters = [date1, tel_id, 9]		
        insert_application(apps, parameters)   

        print("Пользователи + заявка ОК")

    except Exception as error:
        print(error)

class Migration(migrations.Migration):

    dependencies = [
        ('product', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(new_data),
        migrations.RunSQL("""CREATE VIEW view_catalog AS
SELECT catalog.id, catalog.category_id, category.category_title AS category, catalog.catalog_title, catalog.details, catalog.price, catalog.photo
FROM catalog LEFT JOIN category ON catalog.category_id = category.id;
"""),
## SQLite
#        migrations.RunSQL("""CREATE VIEW view_application AS
#SELECT application.id, application.date_application, application.telegram_id, customer.phone_number, customer.first_name, customer.last_name, customer.date_joined, application.catalog_id, catalog.category_id, category.category_title AS category, catalog.catalog_title, catalog.details, catalog.price, catalog.photo,
#(SELECT strftime('%d.%m.%Y %H:%M:%S',datem) || ' - ' || status FROM movement WHERE application_id = application.id ORDER BY datem DESC LIMIT 1) AS final
#FROM application
#LEFT JOIN customer ON application.telegram_id=customer.telegram_id
#LEFT JOIN catalog ON application.catalog_id=catalog.id
#LEFT JOIN category ON catalog.category_id=category.id
#"""),
# PostgreSQL
        migrations.RunSQL("""CREATE VIEW view_application AS
SELECT application.id, application.date_application, application.telegram_id, customer.phone_number, customer.first_name, customer.last_name, customer.date_joined, application.catalog_id, catalog.category_id, category.category_title AS category, catalog.catalog_title, catalog.details, catalog.price, catalog.photo,
(SELECT  to_char(datem, 'DD.MM.YYYY HH:MM:SS') || ' - ' || status FROM movement WHERE application_id = application.id ORDER BY datem DESC LIMIT 1) AS final
FROM application
LEFT JOIN customer ON application.telegram_id=customer.telegram_id
LEFT JOIN catalog ON application.catalog_id=catalog.id
LEFT JOIN category ON catalog.category_id=category.id
"""),
]


